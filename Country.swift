//
//  Country.swift
//  StoreSearch
//
//  Created by Christopher Hannah on 14/11/2016.
//  Copyright © 2016 Christopher Hannah. All rights reserved.
//

import Foundation

struct CountryType {
    var name: String
    var code: String
}

class Country {
    
    var countries: [CountryType] = []
    
    init() {
        countries.append(CountryType(name: "", code: ""))
        countries.append(CountryType(name: "Afghanistan", code: "AF"))
        countries.append(CountryType(name: "Aland Islands", code: "AX"))
        countries.append(CountryType(name: "Albania", code: "AL"))
        countries.append(CountryType(name: "Algeria", code: "DZ"))
        countries.append(CountryType(name: "American Samoa", code: "AS"))
        countries.append(CountryType(name: "Andorra", code: "AD"))
        countries.append(CountryType(name: "Angola", code: "AO"))
        countries.append(CountryType(name: "Anguilla", code: "AI"))
        countries.append(CountryType(name: "Antarctica", code: "AQ"))
        countries.append(CountryType(name: "Antigua and Barbuda", code: "AG"))
        countries.append(CountryType(name: "Argentina", code: "AR"))
        countries.append(CountryType(name: "Armenia", code: "AM"))
        countries.append(CountryType(name: "Aruba", code: "AW"))
        countries.append(CountryType(name: "Australia", code: "AU"))
        countries.append(CountryType(name: "Austria", code: "AT"))
        countries.append(CountryType(name: "Azerbaijan", code: "AZ"))
        countries.append(CountryType(name: "Bahamas", code: "BS"))
        countries.append(CountryType(name: "Bahrain", code: "BH"))
        countries.append(CountryType(name: "Bangladesh", code: "BD"))
        countries.append(CountryType(name: "Barbados", code: "BB"))
        countries.append(CountryType(name: "Belarus", code: "BY"))
        countries.append(CountryType(name: "Belgium", code: "BE"))
        countries.append(CountryType(name: "Belize", code: "BZ"))
        countries.append(CountryType(name: "Benin", code: "BJ"))
        countries.append(CountryType(name: "Bermuda", code: "BM"))
        countries.append(CountryType(name: "Bhutan", code: "BT"))
        countries.append(CountryType(name: "Bolivia", code: "BO"))
        countries.append(CountryType(name: "Bosnia and Herzegovina", code: "BA"))
        countries.append(CountryType(name: "Botswana", code: "BW"))
        countries.append(CountryType(name: "Bouvet Island", code: "BV"))
        countries.append(CountryType(name: "Brazil", code: "BR"))
        countries.append(CountryType(name: "British Virgin Islands", code: "VG"))
        countries.append(CountryType(name: "British Indian Ocean Territory", code: "IO"))
        countries.append(CountryType(name: "Brunei Darussalam", code: "BN"))
        countries.append(CountryType(name: "Bulgaria", code: "BG"))
        countries.append(CountryType(name: "Burkina Faso", code: "BF"))
        countries.append(CountryType(name: "Burundi", code: "BI"))
        countries.append(CountryType(name: "Cambodia", code: "KH"))
        countries.append(CountryType(name: "Cameroon", code: "CM"))
        countries.append(CountryType(name: "Canada", code: "CA"))
        countries.append(CountryType(name: "Cape Verde", code: "CV"))
        countries.append(CountryType(name: "Cayman Islands", code: "KY"))
        countries.append(CountryType(name: "Central African Republic", code: "CF"))
        countries.append(CountryType(name: "Chad", code: "TD"))
        countries.append(CountryType(name: "Chile", code: "CL"))
        countries.append(CountryType(name: "China", code: "CN"))
        countries.append(CountryType(name: "Hong Kong, Special Administrative Region of China", code: "HK"))
        countries.append(CountryType(name: "Macao, Special Administrative Region of China", code: "MO"))
        countries.append(CountryType(name: "Christmas Island", code: "CX"))
        countries.append(CountryType(name: "Cocos (Keeling) Islands", code: "CC"))
        countries.append(CountryType(name: "Colombia", code: "CO"))
        countries.append(CountryType(name: "Comoros", code: "KM"))
        countries.append(CountryType(name: "Congo (Brazzaville)", code: "CG"))
        countries.append(CountryType(name: "Congo, Democratic Republic of the", code: "CD"))
        countries.append(CountryType(name: "Cook Islands", code: "CK"))
        countries.append(CountryType(name: "Costa Rica", code: "CR"))
        countries.append(CountryType(name: "Côte d'Ivoire", code: "CI"))
        countries.append(CountryType(name: "Croatia", code: "HR"))
        countries.append(CountryType(name: "Cuba", code: "CU"))
        countries.append(CountryType(name: "Cyprus", code: "CY"))
        countries.append(CountryType(name: "Czech Republic", code: "CZ"))
        countries.append(CountryType(name: "Denmark", code: "DK"))
        countries.append(CountryType(name: "Djibouti", code: "DJ"))
        countries.append(CountryType(name: "Dominica", code: "DM"))
        countries.append(CountryType(name: "Dominican Republic", code: "DO"))
        countries.append(CountryType(name: "Ecuador", code: "EC"))
        countries.append(CountryType(name: "Egypt", code: "EG"))
        countries.append(CountryType(name: "El Salvador", code: "SV"))
        countries.append(CountryType(name: "Equatorial Guinea", code: "GQ"))
        countries.append(CountryType(name: "Eritrea", code: "ER"))
        countries.append(CountryType(name: "Estonia", code: "EE"))
        countries.append(CountryType(name: "Ethiopia", code: "ET"))
        countries.append(CountryType(name: "Falkland Islands (Malvinas)", code: "FK"))
        countries.append(CountryType(name: "Faroe Islands", code: "FO"))
        countries.append(CountryType(name: "Fiji", code: "FJ"))
        countries.append(CountryType(name: "Finland", code: "FI"))
        countries.append(CountryType(name: "France", code: "FR"))
        countries.append(CountryType(name: "French Guiana", code: "GF"))
        countries.append(CountryType(name: "French Polynesia", code: "PF"))
        countries.append(CountryType(name: "French Southern Territories", code: "TF"))
        countries.append(CountryType(name: "Gabon", code: "GA"))
        countries.append(CountryType(name: "Gambia", code: "GM"))
        countries.append(CountryType(name: "Georgia", code: "GE"))
        countries.append(CountryType(name: "Germany", code: "DE"))
        countries.append(CountryType(name: "Ghana", code: "GH"))
        countries.append(CountryType(name: "Gibraltar", code: "GI"))
        countries.append(CountryType(name: "Greece", code: "GR"))
        countries.append(CountryType(name: "Greenland", code: "GL"))
        countries.append(CountryType(name: "Grenada", code: "GD"))
        countries.append(CountryType(name: "Guadeloupe", code: "GP"))
        countries.append(CountryType(name: "Guam", code: "GU"))
        countries.append(CountryType(name: "Guatemala", code: "GT"))
        countries.append(CountryType(name: "Guernsey", code: "GG"))
        countries.append(CountryType(name: "Guinea", code: "GN"))
        countries.append(CountryType(name: "Guinea-Bissau", code: "GW"))
        countries.append(CountryType(name: "Guyana", code: "GY"))
        countries.append(CountryType(name: "Haiti", code: "HT"))
        countries.append(CountryType(name: "Heard Island and Mcdonald Islands", code: "HM"))
        countries.append(CountryType(name: "Holy See (Vatican City State)", code: "VA"))
        countries.append(CountryType(name: "Honduras", code: "HN"))
        countries.append(CountryType(name: "Hungary", code: "HU"))
        countries.append(CountryType(name: "Iceland", code: "IS"))
        countries.append(CountryType(name: "India", code: "IN"))
        countries.append(CountryType(name: "Indonesia", code: "ID"))
        countries.append(CountryType(name: "Iran, Islamic Republic of", code: "IR"))
        countries.append(CountryType(name: "Iraq", code: "IQ"))
        countries.append(CountryType(name: "Ireland", code: "IE"))
        countries.append(CountryType(name: "Isle of Man", code: "IM"))
        countries.append(CountryType(name: "Israel", code: "IL"))
        countries.append(CountryType(name: "Italy", code: "IT"))
        countries.append(CountryType(name: "Jamaica", code: "JM"))
        countries.append(CountryType(name: "Japan", code: "JP"))
        countries.append(CountryType(name: "Jersey", code: "JE"))
        countries.append(CountryType(name: "Jordan", code: "JO"))
        countries.append(CountryType(name: "Kazakhstan", code: "KZ"))
        countries.append(CountryType(name: "Kenya", code: "KE"))
        countries.append(CountryType(name: "Kiribati", code: "KI"))
        countries.append(CountryType(name: "Korea, Democratic People's Republic of", code: "KP"))
        countries.append(CountryType(name: "Korea, Republic of", code: "KR"))
        countries.append(CountryType(name: "Kuwait", code: "KW"))
        countries.append(CountryType(name: "Kyrgyzstan", code: "KG"))
        countries.append(CountryType(name: "Lao PDR", code: "LA"))
        countries.append(CountryType(name: "Latvia", code: "LV"))
        countries.append(CountryType(name: "Lebanon", code: "LB"))
        countries.append(CountryType(name: "Lesotho", code: "LS"))
        countries.append(CountryType(name: "Liberia", code: "LR"))
        countries.append(CountryType(name: "Libya", code: "LY"))
        countries.append(CountryType(name: "Liechtenstein", code: "LI"))
        countries.append(CountryType(name: "Lithuania", code: "LT"))
        countries.append(CountryType(name: "Luxembourg", code: "LU"))
        countries.append(CountryType(name: "Macedonia, Republic of", code: "MK"))
        countries.append(CountryType(name: "Madagascar", code: "MG"))
        countries.append(CountryType(name: "Malawi", code: "MW"))
        countries.append(CountryType(name: "Malaysia", code: "MY"))
        countries.append(CountryType(name: "Maldives", code: "MV"))
        countries.append(CountryType(name: "Mali", code: "ML"))
        countries.append(CountryType(name: "Malta", code: "MT"))
        countries.append(CountryType(name: "Marshall Islands", code: "MH"))
        countries.append(CountryType(name: "Martinique", code: "MQ"))
        countries.append(CountryType(name: "Mauritania", code: "MR"))
        countries.append(CountryType(name: "Mauritius", code: "MU"))
        countries.append(CountryType(name: "Mayotte", code: "YT"))
        countries.append(CountryType(name: "Mexico", code: "MX"))
        countries.append(CountryType(name: "Micronesia, Federated States of", code: "FM"))
        countries.append(CountryType(name: "Moldova", code: "MD"))
        countries.append(CountryType(name: "Monaco", code: "MC"))
        countries.append(CountryType(name: "Mongolia", code: "MN"))
        countries.append(CountryType(name: "Montenegro", code: "ME"))
        countries.append(CountryType(name: "Montserrat", code: "MS"))
        countries.append(CountryType(name: "Morocco", code: "MA"))
        countries.append(CountryType(name: "Mozambique", code: "MZ"))
        countries.append(CountryType(name: "Myanmar", code: "MM"))
        countries.append(CountryType(name: "Namibia", code: "NA"))
        countries.append(CountryType(name: "Nauru", code: "NR"))
        countries.append(CountryType(name: "Nepal", code: "NP"))
        countries.append(CountryType(name: "Netherlands", code: "NL"))
        countries.append(CountryType(name: "Netherlands Antilles", code: "AN"))
        countries.append(CountryType(name: "New Caledonia", code: "NC"))
        countries.append(CountryType(name: "New Zealand", code: "NZ"))
        countries.append(CountryType(name: "Nicaragua", code: "NI"))
        countries.append(CountryType(name: "Niger", code: "NE"))
        countries.append(CountryType(name: "Nigeria", code: "NG"))
        countries.append(CountryType(name: "Niue", code: "NU"))
        countries.append(CountryType(name: "Norfolk Island", code: "NF"))
        countries.append(CountryType(name: "Northern Mariana Islands", code: "MP"))
        countries.append(CountryType(name: "Norway", code: "NO"))
        countries.append(CountryType(name: "Oman", code: "OM"))
        countries.append(CountryType(name: "Pakistan", code: "PK"))
        countries.append(CountryType(name: "Palau", code: "PW"))
        countries.append(CountryType(name: "Palestinian Territory, Occupied", code: "PS"))
        countries.append(CountryType(name: "Panama", code: "PA"))
        countries.append(CountryType(name: "Papua New Guinea", code: "PG"))
        countries.append(CountryType(name: "Paraguay", code: "PY"))
        countries.append(CountryType(name: "Peru", code: "PE"))
        countries.append(CountryType(name: "Philippines", code: "PH"))
        countries.append(CountryType(name: "Pitcairn", code: "PN"))
        countries.append(CountryType(name: "Poland", code: "PL"))
        countries.append(CountryType(name: "Portugal", code: "PT"))
        countries.append(CountryType(name: "Puerto Rico", code: "PR"))
        countries.append(CountryType(name: "Qatar", code: "QA"))
        countries.append(CountryType(name: "Réunion", code: "RE"))
        countries.append(CountryType(name: "Romania", code: "RO"))
        countries.append(CountryType(name: "Russian Federation", code: "RU"))
        countries.append(CountryType(name: "Rwanda", code: "RW"))
        countries.append(CountryType(name: "Saint-Barthélemy", code: "BL"))
        countries.append(CountryType(name: "Saint Helena", code: "SH"))
        countries.append(CountryType(name: "Saint Kitts and Nevis", code: "KN"))
        countries.append(CountryType(name: "Saint Lucia", code: "LC"))
        countries.append(CountryType(name: "Saint-Martin (French part)", code: "MF"))
        countries.append(CountryType(name: "Saint Pierre and Miquelon", code: "PM"))
        countries.append(CountryType(name: "Saint Vincent and Grenadines", code: "VC"))
        countries.append(CountryType(name: "Samoa", code: "WS"))
        countries.append(CountryType(name: "San Marino", code: "SM"))
        countries.append(CountryType(name: "Sao Tome and Principe", code: "ST"))
        countries.append(CountryType(name: "Saudi Arabia", code: "SA"))
        countries.append(CountryType(name: "Senegal", code: "SN"))
        countries.append(CountryType(name: "Serbia", code: "RS"))
        countries.append(CountryType(name: "Seychelles", code: "SC"))
        countries.append(CountryType(name: "Sierra Leone", code: "SL"))
        countries.append(CountryType(name: "Singapore", code: "SG"))
        countries.append(CountryType(name: "Slovakia", code: "SK"))
        countries.append(CountryType(name: "Slovenia", code: "SI"))
        countries.append(CountryType(name: "Solomon Islands", code: "SB"))
        countries.append(CountryType(name: "Somalia", code: "SO"))
        countries.append(CountryType(name: "South Africa", code: "ZA"))
        countries.append(CountryType(name: "South Georgia and the South Sandwich Islands", code: "GS"))
        countries.append(CountryType(name: "South Sudan", code: "SS"))
        countries.append(CountryType(name: "Spain", code: "ES"))
        countries.append(CountryType(name: "Sri Lanka", code: "LK"))
        countries.append(CountryType(name: "Sudan", code: "SD"))
        countries.append(CountryType(name: "Suriname *", code: "SR"))
        countries.append(CountryType(name: "Svalbard and Jan Mayen Islands", code: "SJ"))
        countries.append(CountryType(name: "Swaziland", code: "SZ"))
        countries.append(CountryType(name: "Sweden", code: "SE"))
        countries.append(CountryType(name: "Switzerland", code: "CH"))
        countries.append(CountryType(name: "Syrian Arab Republic (Syria)", code: "SY"))
        countries.append(CountryType(name: "Taiwan, Republic of China", code: "TW"))
        countries.append(CountryType(name: "Tajikistan", code: "TJ"))
        countries.append(CountryType(name: "Tanzania *, United Republic of", code: "TZ"))
        countries.append(CountryType(name: "Thailand", code: "TH"))
        countries.append(CountryType(name: "Timor-Leste", code: "TL"))
        countries.append(CountryType(name: "Togo", code: "TG"))
        countries.append(CountryType(name: "Tokelau", code: "TK"))
        countries.append(CountryType(name: "Tonga", code: "TO"))
        countries.append(CountryType(name: "Trinidad and Tobago", code: "TT"))
        countries.append(CountryType(name: "Tunisia", code: "TN"))
        countries.append(CountryType(name: "Turkey", code: "TR"))
        countries.append(CountryType(name: "Turkmenistan", code: "TM"))
        countries.append(CountryType(name: "Turks and Caicos Islands", code: "TC"))
        countries.append(CountryType(name: "Tuvalu", code: "TV"))
        countries.append(CountryType(name: "Uganda", code: "UG"))
        countries.append(CountryType(name: "Ukraine", code: "UA"))
        countries.append(CountryType(name: "United Arab Emirates", code: "AE"))
        countries.append(CountryType(name: "United Kingdom", code: "GB"))
        countries.append(CountryType(name: "United States of America", code: "US"))
        countries.append(CountryType(name: "United States Minor Outlying Islands", code: "UM"))
        countries.append(CountryType(name: "Uruguay", code: "UY"))
        countries.append(CountryType(name: "Uzbekistan", code: "UZ"))
        countries.append(CountryType(name: "Vanuatu", code: "VU"))
        countries.append(CountryType(name: "Venezuela (Bolivarian Republic of)", code: "VE"))
        countries.append(CountryType(name: "Viet Nam", code: "VN"))
        countries.append(CountryType(name: "Virgin Islands, US", code: "VI"))
        countries.append(CountryType(name: "Wallis and Futuna Islands", code: "WF"))
        countries.append(CountryType(name: "Western Sahara", code: "EH"))
        countries.append(CountryType(name: "Yemen", code: "YE"))
        countries.append(CountryType(name: "Zambia", code: "ZM"))
        countries.append(CountryType(name: "Zimbabwe", code: "ZW"))
    }
    
    func getCountryLabels() -> [String] {
        var labels: [String] = []
        for country in countries {
            labels.append(country.name)
        }
        return labels
    }
    
    func getParameterForLabel(label: String) -> String {
        var parameter = ""
        for country in countries {
            if (country.name == label) {
                parameter = country.code
                return parameter
            }
        }
        return parameter
    }
}
